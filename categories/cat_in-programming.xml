<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Land Of Plenty (In Programming)</title><link>https://renewang.github.io/land_of_plenty/</link><description></description><atom:link rel="self" href="https://renewang.github.io/land_of_plenty/categories/cat_in-programming.xml" type="application/rss+xml"></atom:link><language>en</language><lastBuildDate>Sun, 11 Jun 2017 08:43:32 GMT</lastBuildDate><generator>https://getnikola.com/</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Learning CPython Internals - Interpreter and source code overview</title><link>https://renewang.github.io/land_of_plenty/posts/learning-cpython-internals-interpreter-and-source-code-overview/</link><dc:creator>Rene Wang</dc:creator><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;On the road towards advancing python programming it's inevitable to learn how cpython interperter works and extend interpreter's functionality through python C api. However, the biggest difficulty is to know where and how to start especially when interpreter crashes. The online courses, &lt;a href="http://pgbovine.net/cpython-internals.htm"&gt;CPython Internals&lt;/a&gt;, taught by Philip Guo, gave brief background of computational theory behind the interpreter as a start to bridge what has been in practice.&lt;/p&gt;
&lt;p&gt;However, this course is taught with python 2.7. Some pieces are missing or not clarified in this mini-series lecture. Firstly, python 3.x diverges greatly from python 2.7 not only the python syntax itself but also the corresponding c api. Some materials of this course is slightly inapplicable to latest python version. Secondly, this series simply touches the surface of python c api and doesn't have sufficient time to dig deeper. I would like to fill up the gap and hopefully would gain some feedbacks from real cpython experts.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://renewang.github.io/land_of_plenty/posts/learning-cpython-internals-interpreter-and-source-code-overview/"&gt;Read moreâ€¦&lt;/a&gt; (8 min remaining to read)&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description><category>python</category><guid>https://renewang.github.io/land_of_plenty/posts/learning-cpython-internals-interpreter-and-source-code-overview/</guid><pubDate>Thu, 02 Feb 2017 04:24:51 GMT</pubDate></item></channel></rss>